--------------------------------------------------------------------------------
-------------------------- Proveedor -------------------------------------------
CREATE TABLE proveedor(
id_proveedor NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
nombre VARCHAR(50) NOT NULL,
direccion VARCHAR(70) NOT NULL,
descripcion VARCHAR(50) NOT NULL,
CONSTRAINT PK_proveedor PRIMARY KEY(id_proveedor));

INSERT INTO proveedor (nombre,direccion,descripcion) 
    VALUES('Michael Ramirez','Enfrente a la iglesia de coronado', 'Nos brinda todos los productos de comida');
    
INSERT INTO proveedor (nombre,direccion,descripcion) 
    VALUES('Lindsay Alfaro','Enfrente de monge de moravia centro', 'Nos brinda la musica del evento');
--------------------------------------------------------------------------------
-------------------------- Cliente ---------------------------------------------
CREATE TABLE cliente(
id_cliente NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
nombre VARCHAR(20) NOT NULL,
prim_apellido VARCHAR(20) NOT NULL,
seg_apellido VARCHAR(20) NOT NULL,
telefono number(8) NOT NULL,
correo VARCHAR(50),
fecha_nacimiento DATE NOT NULL,
direccion VARCHAR(70) NOT NULL,
CONSTRAINT PK_cliente PRIMARY KEY(id_cliente));

INSERT INTO cliente (nombre,prim_apellido,seg_apellido,telefono,correo,fecha_nacimiento,direccion) 
    VALUES('Francynne','Alfaro', 'Delgado',11112222,'francynne@gmail.com','09/11/03','San antonio de coronado');
    
INSERT INTO cliente (nombre,prim_apellido,seg_apellido,telefono,correo,fecha_nacimiento,direccion) 
    VALUES('Daniel','Ramirez', 'Hernandez',22223333,'daniel@gmail.com','12/02/01','Heredia centro');
--------------------------------------------------------------------------------
-------------------------- Metodo Pago -----------------------------------------
CREATE TABLE metodopago(
id_metodopago NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
tipo_metodo VARCHAR(15) NOT NULL,
descripcion VARCHAR(20) NOT NULL,
num_tarjeta NUMBER(16) NOT NULL,
fecha_venc  DATE NOT NULL,
cod_seguridad NUMBER(3) NOT NULL,
CONSTRAINT PK_metodopago PRIMARY KEY(id_metodopago));

INSERT INTO metodopago (tipo_metodo,descripcion,num_tarjeta,fecha_venc,cod_seguridad) 
    VALUES('Debito','BCR',1111222233334444,'01/08/24',333);
    
INSERT INTO metodopago (tipo_metodo,descripcion,num_tarjeta,fecha_venc,cod_seguridad) 
    VALUES('Credito','BAC',555566666677777,'01/12/23',888);
--------------------------------------------------------------------------------
-------------------------- Horario ---------------------------------------------
CREATE TABLE horario(
id_horario NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
descripcion VARCHAR(30) NOT NULL,
CONSTRAINT PK_horario PRIMARY KEY(id_horario));

INSERT INTO horario (descripcion)  VALUES('Lunes de 1pm a 8 pm');

INSERT INTO horario (descripcion)  VALUES('Viernes de 8am a 1 pm');
--------------------------------------------------------------------------------
-------------------------- Sucursal --------------------------------------------
CREATE TABLE sucursal(
id_sucursal NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
provincia VARCHAR(15) NOT NULL,
canton VARCHAR(15) NOT NULL,
distrito VARCHAR(15) NOT NULL,
id_horario  NUMBER NOT NULL,
CONSTRAINT PK_sucursal PRIMARY KEY(id_sucursal),
CONSTRAINT FK_sucursal FOREIGN KEY (id_horario) REFERENCES horario(id_horario));

INSERT INTO sucursal (provincia,canton,distrito,id_horario) 
    VALUES('Heredia','Barva','San pedro',1);
    
INSERT INTO sucursal (provincia,canton,distrito,id_horario) 
    VALUES('Heredia','Santo domingo','Paracito',2);
--------------------------------------------------------------------------------
-------------------------- Empleado --------------------------------------------
CREATE TABLE empleado(
id_empleado NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
nombre VARCHAR(20) NOT NULL,
prim_apellido VARCHAR(20) NOT NULL,
seg_apellido VARCHAR(20) NOT NULL,
telefono number(8) NOT NULL,
correo VARCHAR(30),
fecha_nacimiento DATE NOT NULL,
direccion VARCHAR(50) NOT NULL,
salario NUMBER(7) NOT NULL,
id_sucursal NUMBER(5) NOT NULL,
CONSTRAINT PK_empleado PRIMARY KEY(id_empleado),
CONSTRAINT FK_empleado FOREIGN KEY (id_sucursal) REFERENCES sucursal(id_sucursal));

INSERT INTO empleado (nombre,prim_apellido,seg_apellido,telefono,fecha_nacimiento,direccion,salario,id_sucursal) 
    VALUES('Oscar','Montero','Segura',11116666,'08/03/96','Cartago centro',260000,1);
    
INSERT INTO empleado (nombre,prim_apellido,seg_apellido,telefono,fecha_nacimiento,direccion,salario,id_sucursal) 
    VALUES('Luciana','Fernandez','Mora',77772222,'01/06/99','Guanacaste centro',270000,2);
--------------------------------------------------------------------------------
-------------------------- Reservaciones ---------------------------------------
CREATE TABLE reservacion(
id_reservacion NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
Fecha DATE NOT NULL,
CantidadPersonas NUMBER NOT NULL,
id_metodopago NUMBER NOT NULL,
CONSTRAINT PK_reservacion PRIMARY KEY(id_reservacion),
CONSTRAINT FK_reservacion FOREIGN KEY (id_metodopago) REFERENCES metodopago(id_metodopago));

INSERT INTO reservacion (fecha,cantidadpersonas,id_metodopago) 
    VALUES('23/08/22',270,1);
    
INSERT INTO reservacion (fecha,cantidadpersonas,id_metodopago) 
    VALUES('24/08/22',300,2);
--------------------------------------------------------------------------------
-------------------------- Evento ----------------------------------------------
CREATE TABLE evento(
id_evento NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
descripcion VARCHAR(50) NOT NULL,
precio NUMBER(10) NOT NULL,
id_reservacion  NUMBER NOT NULL,
id_sucursal NUMBER NOT NULL,
CONSTRAINT PK_evento PRIMARY KEY(id_evento),
CONSTRAINT FK_evento FOREIGN KEY (id_reservacion) REFERENCES reservacion(id_reservacion),
CONSTRAINT FK_evento1 FOREIGN KEY (id_sucursal) REFERENCES sucursal(id_sucursal));

INSERT INTO evento (descripcion,precio,id_reservacion,id_sucursal) 
    VALUES('Una boda',3000000,1,2);

INSERT INTO evento (descripcion,precio,id_reservacion,id_sucursal) 
    VALUES('Un concierto',6000000,2,1);
--------------------------------------------------------------------------------
-------------------------- Evento Proveedor ------------------------------------
CREATE TABLE evento_proveedor(
id_eventoproveedor NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
id_evento NUMBER NOT NULL,
id_proveedor NUMBER NOT NULL,
CONSTRAINT PK_evento_proveedor PRIMARY KEY(id_evento, id_proveedor),
CONSTRAINT FK_evento_proveedor FOREIGN KEY (id_evento) REFERENCES evento(id_evento),
CONSTRAINT FK_evento_proveedor1 FOREIGN KEY (id_proveedor) REFERENCES proveedor(id_proveedor));

INSERT INTO evento_proveedor (id_evento,id_proveedor) 
    VALUES(2,1);
    
INSERT INTO evento_proveedor (id_evento,id_proveedor) 
    VALUES(1,2);
--------------------------------------------------------------------------------
-------------------------- Bitacora --------------------------------------------
CREATE TABLE bitacora(
id_bitacora NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
fecha DATE NOT NULL,
id_evento NUMBER(5) NOT NULL,
id_empleado NUMBER(5) NOT NULL,
CONSTRAINT PK_bitacora PRIMARY KEY(id_bitacora),
CONSTRAINT FK_bitacora FOREIGN KEY (id_evento) REFERENCES evento(id_evento),
CONSTRAINT FK_bitacora1 FOREIGN KEY (id_empleado) REFERENCES empleado(id_empleado));

INSERT INTO bitacora (fecha,id_evento,id_empleado) 
    VALUES(SYSDATE,1,2);
    
INSERT INTO bitacora (fecha,id_evento,id_empleado) 
    VALUES(SYSDATE,2,1);
--------------------------------------------------------------------------------
-------------------------- Reservaciones Clientes -------------------------------
CREATE TABLE reservaciones_clientes(
id_reservacion_cliente NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
id_reservacion NUMBER NOT NULL,
id_cliente NUMBER NOT NULL,
CONSTRAINT PK_reservaciones_clientes PRIMARY KEY(id_reservacion_cliente),
CONSTRAINT FK_reservaciones_clientes FOREIGN KEY (id_reservacion) REFERENCES reservacion(id_reservacion),
CONSTRAINT FK_reservaciones_clientes1 FOREIGN KEY (id_cliente) REFERENCES cliente(id_cliente));

INSERT INTO reservaciones_clientes (id_reservacion,id_cliente) 
    VALUES(2,1);
    
INSERT INTO reservaciones_clientes (id_reservacion,id_cliente) 
    VALUES(1,2);
--------------------------------------------------------------------------------
-------------------------- Permisos al rol de asistente -------------------------------  
GRANT READ, UPDATE ON bitacora TO assistant;
GRANT READ, UPDATE ON cliente TO assistant;
GRANT READ, UPDATE ON empleado TO assistant;
GRANT READ, UPDATE ON evento TO assistant;
GRANT READ, UPDATE ON evento_proveedor TO assistant;
GRANT READ, UPDATE ON horario TO assistant;
GRANT READ, UPDATE ON metodopago TO assistant;
GRANT READ, UPDATE ON proveedor TO assistant;
GRANT READ, UPDATE ON reservacion TO assistant;
GRANT READ, UPDATE ON reservaciones_clientes TO assistant;
GRANT READ, UPDATE ON sucursal TO assistant;
--------------------------------------------------------------------------------
-------------------------- Permisos al rol de empleado -------------------------------  
GRANT SELECT ON evento TO employee;
GRANT SELECT ON horario TO employee;
GRANT SELECT ON reservacion TO employee;
GRANT SELECT ON sucursal TO employee;
--------------------------------------------------------------------------------
-------------------------- Consultas ------------------------------- 1 Su costo es de 7
SELECT * FROM cliente,reservacion,reservaciones_clientes
    WHERE reservaciones_clientes.id_cliente = cliente.id_cliente and reservaciones_clientes.id_reservacion = reservacion.id_reservacion; 

------------------ Consulta optimizada ---------------------------    Su costo es de 7
 SELECT cliente.nombre || ' '||cliente.prim_apellido AS "Nombre de cliente", reservacion.fecha,reservacion.cantidadpersonas 
    FROM reservaciones_clientes
    INNER JOIN reservacion ON reservacion.id_reservacion = reservaciones_clientes.id_reservacion
    INNER JOIN cliente ON cliente.id_cliente = reservaciones_clientes.id_cliente;
    
----------------------------------------------------------------------------------- 2 Su costo es de 3
SELECT * FROM horario
    WHERE descripcion LIKE '%8%';
    
------------------ Consulta optimizada ---------------------------    Su costo es de 2    
create index idx_descrip on horario(descripcion);
SELECT * FROM horario
    WHERE substr(descripcion,1,1)= '8';
    
----------------------------------------------------------------------------------- 3 Su costo es de 6
SELECT * FROM  empleado 
WHERE salario = (SELECT MAX(salario)  FROM empleado);

------------------ Consulta optimizada ---------------------------    Su costo es de 3
create index idx_salario on empleado(salario);

SELECT nombre || ' ' || prim_apellido AS "Nombre de empleado", salario FROM  empleado 
WHERE salario = (SELECT MAX(salario)  FROM empleado);

----------------------------------------------------------------------------------- 4 Su costo es de 7
SELECT * FROM proveedor,evento, evento_proveedor
    WHERE proveedor.id_proveedor = evento_proveedor.id_proveedor AND evento_proveedor.id_evento = evento.id_evento;

------------------ Consulta optimizada ---------------------------    Su costo es de 5
SELECT proveedor.nombre AS "Nombre proveedor",evento.descripcion AS "Tipo de evento",evento.precio 
    FROM evento_proveedor
    INNER JOIN evento ON evento_proveedor.id_evento = evento.id_evento
    INNER JOIN proveedor ON evento_proveedor.id_proveedor = proveedor.id_proveedor;
    
----------------------------------------------------------------------------------- 5 Su costo es de 7
SELECT * FROM evento, sucursal, reservacion
    WHERE reservacion.id_reservacion = evento.id_reservacion and sucursal.id_sucursal = evento.id_sucursal;
   
------------------ Consulta optimizada ---------------------------    Su costo es de 7
SELECT evento.descripcion || ' - '|| evento.precio AS "Tipo de evento y precio", 
reservacion.fecha||' - '||reservacion.cantidadpersonas AS "La fecha y cantidad de personas",
sucursal.provincia||' '||sucursal.canton AS "Su lugar"
    FROM evento
    INNER JOIN sucursal ON evento.id_sucursal = sucursal.id_sucursal
    INNER JOIN reservacion ON evento.id_reservacion = reservacion.id_reservacion;
    
----------------------------------------------------------------------------------- 6 Su costo es de 3
SELECT * FROM cliente
    WHERE nombre LIKE '%F%';

------------------ Consulta optimizada ---------------------------    Su costo es de 3
create index idx_nombre on cliente(nombre);

SELECT * FROM cliente
    WHERE substr(nombre,1,1)= 'F';
    
----------------------------------------------------------------------------------- 7 Su costo es de 3
SELECT * FROM bitacora
    WHERE fecha = sysdate;
    
 ------------------ Consulta optimizada ---------------------------    Su costo es de 2
 create index idx_fecha on bitacora(fecha);
 
 SELECT * FROM bitacora
    WHERE fecha = sysdate;
    
----------------------------------------------------------------------------------- 8 Su costo es de 6
SELECT * FROM reservacion, metodopago
    WHERE reservacion.id_metodopago = metodopago.id_metodopago;
 
 ------------------ Consulta optimizada ---------------------------    Su costo es de 6
 SELECT reservacion.fecha,reservacion.cantidadpersonas,metodopago.tipo_metodo
    FROM reservacion
    INNER JOIN metodopago ON reservacion.id_metodopago = metodopago.id_metodopago;
    
----------------------------------------------------------------------------------- 9 Su costo es de 5
SELECT * FROM empleado, sucursal
    WHERE sucursal.id_sucursal = empleado.id_sucursal AND sucursal.id_sucursal LIKE '1';
 
 ------------------ Consulta optimizada ---------------------------    Su costo es de 5
 SELECT empleado.nombre ||' '|| empleado.prim_apellido AS "Nombre completo",sucursal.provincia || ' '|| sucursal.distrito AS "Lugar de scursal" 
    FROM empleado
    INNER JOIN sucursal ON sucursal.id_sucursal = empleado.id_sucursal
    WHERE substr(sucursal.id_sucursal,1,1)= '1';
    
----------------------------------------------------------------------------------- 10 Su costo es de 3
SELECT AVG (precio) "Promedio de precios" FROM evento;

------------------ Consulta optimizada ---------------------------    Su costo es de 1
 create index idx_precio on evento(precio);
 SELECT AVG (precio) "Promedio de precios" FROM evento;
 
----------------------------------------------------------------------------------- 11 Su costo es de 8
SELECT * FROM evento, sucursal, empleado
WHERE evento.id_sucursal = empleado.id_sucursal AND sucursal.id_sucursal = empleado.id_sucursal AND sucursal.id_sucursal = evento.id_sucursal;

------------------ Consulta optimizada ---------------------------    Su costo es de 8
SELECT  empleado.nombre ||' '|| empleado.prim_apellido AS "Nombre completo",sucursal.provincia || ' '|| sucursal.distrito AS "Lugar de sucursal", 
evento.descripcion ||' - '|| evento.precio AS "Evento y precio" 
    FROM evento
    INNER JOIN sucursal ON sucursal.id_sucursal = evento.id_sucursal
    INNER JOIN empleado ON sucursal.id_sucursal = empleado.id_sucursal;